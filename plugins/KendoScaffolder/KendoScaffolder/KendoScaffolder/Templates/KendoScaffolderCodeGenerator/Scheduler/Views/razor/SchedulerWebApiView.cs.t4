﻿<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="..\ImportsSchedulerView.include.t4" #>
<#
    var entitySetName = ModelMetadata.EntitySetName;
#>
@* Important! Register the following route if it's not existing in the RouteTable
config.Routes.MapHttpRoute(
    name: "DefaultApi",
    routeTemplate: "api/{controller}/{id}",
    defaults: new { id = RouteParameter.Optional }
);
*@

@(Html.Kendo().Scheduler<<#= Namespace #>.<#= WidgetViewModelName #>>()
    .Name("scheduler")
    .Editable(editable => editable
        .EditRecurringMode(SchedulerEditRecurringMode.Dialog)
<#
    if(!EditableCreate) {
#>
        .Create(false)
<#
    }
    if(!EditableUpdate) {
#>
        .Update(false)
<#
    }
    if(!EditableDestroy) {
#>
        .Destroy(false)
<#
    }
    if(!EditableMove) {
#>
        .Move(false)
<#
    }
    if(!EditableResize) {
#>
        .Resize(false)
<#
    }
#>
    )
    .Selectable(<#= Selectable.ToString().ToLower() #>)
<#
    if(SchedulerViewTypes.Count > 0){
#>
    .Views(views => {
<#
    foreach (string view in SchedulerViewTypes)
    {
#>
        views.<#= view #>View();
<#
    }
#>
    })
<#
    }
#>
<#
    if(PdfExport) {
#>
    .Pdf(pdf => pdf
        .FileName("Kendo UI Scheduler Export.pdf")
        .ProxyURL(Url.Action("Pdf_Export_Save", "Scheduler"))
    )
    .Toolbar(t => t.Pdf())
<#
    }
    if(SchedulerEvents.Count > 0) {
#>
    .Events(events => {
<#
      foreach (string ev in SchedulerEvents)
      {
#>
        events.<#= ev #>("on<#= ev #>");
<#
      }
#>
    })
<#
    }
#>
    .DataSource(dataSource => dataSource
        .WebApi()
        .Model(m => {
            m.Id(f => f.<#= PrimaryKeyName #>);
            m.Field(f => f.Title).DefaultValue("No title");
            m.RecurrenceId(f => f.RecurrenceID);
        })
        .Read(read => read.Url(Url.HttpRouteUrl("DefaultApi", new { controller = "<#= entitySetName #>" })))
<#
    if(EditableCreate || EditableResize || EditableMove) {
#>
        .Create(create => create.Url(Url.HttpRouteUrl("DefaultApi", new { controller = "<#= entitySetName #>" })))
<#
    }
    if(EditableUpdate || EditableResize || EditableMove) {
#>
        .Update(update => update.Url(Url.HttpRouteUrl("DefaultApi", new { controller = "<#= entitySetName #>", id = "{0}" })))
<#
    }
    if(EditableDestroy || EditableResize || EditableMove) {
#>
        .Destroy(destroy => destroy.Url(Url.HttpRouteUrl("DefaultApi", new { controller = "<#= entitySetName #>", id = "{0}" })))
<#
    }
#>
      )
)

<# if(SchedulerEvents.Count > 0){ #>
<script>

<#
    foreach (string ev in SchedulerEvents)
    {
#>
    function on<#= ev #>(e){
        //Implement the event handler for <#= ev #>
    }

<#
    }
#>
</script>     
<# } #>