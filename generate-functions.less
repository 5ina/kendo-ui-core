@color1: #aaa;
@color2: #bbb;
@color3: #ccc;
@color4: #ddd;
@color5: #eee;
@color6: #fff;
@step: 1%;
@base1: #272727;
@base2: #daecf4;
@base3: #e9e9e9;
@base4: #212a33;
@base5: #f3f3f4;
@base6: #ffffff;

@threshold: 30;

.lighten(@amount) when (@amount = @threshold) { }

.lighten(@amount) when not (@amount = @threshold) {
    @mod1: lighten(@color1, @amount);

    process: ~"lighten(@VARIABLE, @{amount})=[ @{mod1} ]";

    .lighten(@amount + @step);
}

.darken(@amount) when (@amount = @threshold) { }

.darken(@amount) when not (@amount = @threshold) {
    @mod1: darken(@color1, @amount);

    process: ~"darken(@VARIABLE, @{amount})=[ @{mod1} ]";

    .darken(@amount + @step);
}

.contrast() {
    @mod1: contrast(@color1);

    process: ~"contrast(@VARIABLE)=[ @{mod1} ]";
}

.contrast_hover_bg(@light_amount, @dark_amount) when (@light_amount = @threshold) and (@dark_amount = @threshold) { }

.contrast_hover_bg(@light_amount, @dark_amount) when (@light_amount = @threshold) and not (@dark_amount = @threshold) {
    .contrast_hover_bg(@step, @dark_amount + @step);
}

.contrast_hover_bg(@light_amount, @dark_amount) when not (@light_amount = @threshold) and not (@dark_amount = @threshold) {
    @mod1: contrast(@normal_bg1, lighten(@color1, @light_amount), darken(@color1, @dark_amount), 0.5);

    process: ~"contrast(@hover-background, lighten(@VARIABLE, @{light_amount}), darken(@VARIABLE, @{dark_amount}), 0.5)=[ @{mod1} ]";

    .contrast_hover_bg(@light_amount + @step, @dark_amount);
}

.contrast_selected_bg(@light_amount, @dark_amount) when (@light_amount = @threshold) and (@dark_amount = @threshold) { }

.contrast_selected_bg(@light_amount, @dark_amount) when (@light_amount = @threshold) and not (@dark_amount = @threshold) {
    .contrast_selected_bg(@step, @dark_amount + @step);
}

.contrast_selected_bg(@light_amount, @dark_amount) when not (@light_amount = @threshold) and not (@dark_amount = @threshold) {
    @mod1: contrast(@selected_bg1, lighten(@color1, @light_amount), darken(@color1, @dark_amount), 0.5);

    process: ~"contrast(@selected-background, lighten(@VARIABLE, @{light_amount}), darken(@VARIABLE, @{dark_amount}), 0.5)=[ @{mod1} ]";

    .contrast_selected_bg(@light_amount + @step, @dark_amount);
}

.contrast_base(@light_amount, @dark_amount) when (@light_amount = @threshold) and (@dark_amount = @threshold) { }

.contrast_base(@light_amount, @dark_amount) when (@light_amount = @threshold) and not (@dark_amount = @threshold) {
    .contrast_base(@step, @dark_amount + @step);
}

.contrast_base(@light_amount, @dark_amount) when not (@light_amount = @threshold) and not (@dark_amount = @threshold) {
    @mod1: contrast(@base1, lighten(@color1, @light_amount), darken(@color1, @dark_amount), 0.5);

    process: ~"contrast(@base, lighten(@VARIABLE, @{light_amount}), darken(@VARIABLE, @{dark_amount}), 0.5)=[ @{mod1} ]";

    .contrast_base(@light_amount + @step, @dark_amount);
}

.saturate(@amount) when (@amount = @threshold) { }

.saturate(@amount) when not (@amount = @threshold) {
    @mod1: saturate(@color1, @amount);

    process: ~"saturate(@VARIABLE, @{amount})=[ @{mod1} ]";

    .saturate(@amount + @step);
}

.desaturate(@amount) when (@amount = @threshold) { }

.desaturate(@amount) when not (@amount = @threshold) {
    @mod1: desaturate(@color1, @amount);

    process: ~"desaturate(@VARIABLE, @{amount})=[ @{mod1} ]";

    .desaturate(@amount + @step);
}

.result {
    .lighten(@step);
    .darken(@step);
    .contrast();
    .contrast_base(@step, @step);
    .contrast_hover_bg(@step, @step);
    .contrast_selected_bg(@step, @step);
    .saturate(@step);
    .desaturate(@step);
}
