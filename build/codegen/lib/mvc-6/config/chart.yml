:options:
    - :name: seriesColors
      :merge: true
      :type: String[]

    - :name: categoryAxis.axisCrossingValue
      :merge: true
      :type: object[]

    - :name: categoryAxis.autoBaseUnitSteps.days
      :merge: true
      :type: int[]

    - :name: categoryAxis.autoBaseUnitSteps.hours
      :merge: true
      :type: int[]

    - :name: categoryAxis.autoBaseUnitSteps.minutes
      :merge: true
      :type: int[]

    - :name: categoryAxis.autoBaseUnitSteps.months
      :merge: true
      :type: int[]

    - :name: categoryAxis.autoBaseUnitSteps.seconds
      :merge: true
      :type: int[]

    - :name: categoryAxis.autoBaseUnitSteps.years
      :merge: true
      :type: int[]

    - :name: categoryAxis.autoBaseUnitSteps.weeks
      :merge: true
      :type: int[]

    - :name: categoryAxis.baseUnit
      :description: Specifies the base time interval for the axis.
      :type: String
      :enum_type: ChartAxisBaseUnit
      :values:
          - :value: seconds
            :member: Seconds
            :description: The time interval is seconds.

          - :value: minutes
            :member: Minutes
            :description: The time interval is minutes.

          - :value: hours
            :member: Hours
            :description: The time interval is hours.

          - :value: days
            :member: Days
            :description: The time interval is days.

          - :value: weeks
            :member: Weeks
            :description: The time interval is weeks.

          - :value: months
            :member: Months
            :description: The time interval is months.

          - :value: years
            :member: Years
            :description: The time interval is years.

          - :value: fit
            :member: Fit
            :description: Automatic base unit based on limit set from MaxDateGroups. Note that the BaseUnitStep setting will be disregarded.

    - :name: categoryAxis.baseUnitStep
      :merge: true
      :type: int

    - :name: categoryAxis.categories
      :merge: true
      :type: object[]

    - :name: categoryAxis.justified
      :merge: true
      :type: bool
      :default: false

    - :name: categoryAxis.labels.rotation.angle
      :merge: true
      :type: object

    - :name: categoryAxis.max
      :merge: true
      :type: object

    - :name: categoryAxis.min
      :merge: true
      :type: object

    - :name: categoryAxis.plotBands.from
      :merge: true
      :type: object

    - :name: categoryAxis.plotBands.to
      :merge: true
      :type: object

    - :name: categoryAxis.select.from
      :merge: true
      :type: object

    - :name: categoryAxis.select.to
      :merge: true
      :type: object

    - :name: categoryAxis.select.min
      :merge: true
      :type: object

    - :name: categoryAxis.select.max
      :merge: true
      :type: object

    - :name: categoryAxis.type
      :description: Specifies the category axis type.
      :type: String
      :enum_type: ChartCategoryAxisType
      :values:
          - :value: categoryAxis
            :member: Category
            :description: Discrete category axis.

          - :value: date
            :member: Date
            :description: Specialized axis for displaying chronological data.

    - :name: legend.position
      :description: Specifies the legend position.
      :type: String
      :enum_type: ChartLegendPosition
      :values:
          - :value: top
            :member: Top
            :description: The legend is positioned on the top

          - :value: bottom
            :member: Bottom
            :description: The legend is positioned on the bottom

          - :value: left
            :member: Left
            :description: The legend is positioned on the left

          - :value: right
            :member: Right
            :description: The legend is positioned on the right

          - :value: custom
            :member: Custom
            :description: The legend is positioned using OffsetX and OffsetY

    - :name: pannable.key
      :description: Specifies the key that should be pressed to activate panning or zooming.
      :type: String
      :enum_type: ChartActivationKey
      :values:
          - :value: none
            :member: None
            :description: No key is required.

          - :value: ctrl
            :member: Ctrl
            :description: The "ctrl" key should be pressed.

          - :value: shift
            :member: Shift
            :description: The "shift" key should be pressed.

          - :value: alt
            :member: Alt
            :description: The "alt" key should be pressed.

    - :name: pannable.lock
      :description: Specifies an axis that should not be panned or zoomed.
      :type: String
      :enum_type: ChartAxisLock
      :values:
          - :value: none
            :member: None
            :description: No axis locking is applied.

          - :value: x
            :member: X
            :description: Locks the x axis.

          - :value: y
            :member: Y
            :description: Locks the y axis.

    - :name: plotArea.border.dashType
      :description: Specifies the line dash type.
      :type: String
      :enum_type: ChartDashType
      :values:
          - :value: solid
            :member: Solid
            :description: A solid line.

          - :value: dot
            :member: Dot
            :description: A line consisting of dots.

          - :value: dash
            :member: Dash
            :description: A line consisting of dashes.

          - :value: longDash
            :member: LongDash
            :description: A line consisting of a repeating pattern of long dashes.

          - :value: dashDot
            :member: DashDot
            :description: A line consisting of a repeating pattern of dashes and dots.

          - :value: longDashDot
            :member: LongDashDot
            :description: A line consisting of a repeating pattern of long dashes and dots.

          - :value: longDashDotDot
            :member: LongDashDotDot
            :description: A line consisting of a repeating pattern of long dashes and two dots.

    - :name: renderAs
      :description: Specifies the preferred widget rendering mode.
      :type: String
      :enum_type: RenderingMode
      :values:
          - :value: svg
            :member: SVG
            :description: Attempts to render the widget as an inline SVG document.

          - :value: canvas
            :member: Canvas
            :description: Attempts to render the widget as Canvas element.

          - :value: vml
            :member: VML
            :description: Attempts to render the widget as VML elements.

    - :name: series.aggregate
      :description: Specifies the preferred series aggregate.
      :type:
          - String
          - Function
      :enum_type: ChartSeriesAggregate
      :values:
          - :value: avg
            :member: Avg
            :description: The average of all values for the date period.

          - :value: count
            :member: Count
            :description: The number of values for the date period.

          - :value: first
            :member: First
            :description: The first of all values for the date period.

          - :value: max
            :member: Max
            :description: The highest value for the date period.

          - :value: min
            :member: Min
            :description: The lowest value for the date period.

          - :value: sum
            :member: Sum
            :description: The sum of all values for the date period.

          - :value: sumOrNull
            :member: SumOrNull
            :description: The sum of all values for the date period. If there are not data for the current period of time the aggregate will return 'null'(instead of 'zero' for the sum aggregate).

    - :name: series.notes.label.position
      :description: Specifies the position of the labels.
      :type: String
      :enum_type: ChartNoteLabelPosition
      :values:
          - :value: inside
            :member: Inside
            :description: The label is positioned inside of the icon.

          - :value: outside
            :member: Outside
            :description: The label is positioned outside of the icon.

    - :name: series.notes.position
      :description: Specifies the position of the note.
      :type: String
      :enum_type: ChartNotePosition
      :values:
          - :value: top
            :member: Top
            :description: The note is positioned on the top.

          - :value: bottom
            :member: Bottom
            :description: The note is positioned on the bottom.

          - :value: left
            :member: Left
            :description: The note is positioned on the left.

          - :value: right
            :member: Right
            :description: The note is positioned on the right.

    - :name: series.line.style
      :description: Specifies the preferred line rendering style.
      :type: String
      :enum_type: ChartAreaStyle
      :values:
          - :value: normal
            :member: Normal
            :description: Points will be connected with straight line.

          - :value: step
            :member: Step
            :description: Points will be connected with a line at right angles.

          - :value: smooth
            :member: Smooth
            :description: Points will be connected with smooth line.

    - :name: series.stack.type
      :description: Specifies the preferred stack type.
      :type: String
      :enum_type: ChartStackType
      :values:
          - :value: normal
            :member: Normal
            :description: The value of the stack is the sum of all points in the category (or group).

          - :value: 100%
            :member: Stack100
            :description: The value of the stack is always 100% (1.0). Points within the category (or group) are represented as percentages.

    - :name: series.style
      :description: Specifies the preferred rendering style.
      :type: String
      :enum_type: ChartLineStyle
      :values:
          - :value: normal
            :member: Normal
            :description: Points will be connected with straight line.

          - :value: step
            :member: Step
            :description: Points will be connected with a line at right angles.

          - :value: smooth
            :member: Smooth
            :description: Points will be connected with smooth line.

    - :name: series.target.line.width
      :merge: true
      :type: double

    - :name: title.align
      :description: Specifies the text alignment.
      :type: String
      :enum_type: ChartTextAlignment
      :values:
          - :value: left
            :member: Left
            :description: The text is aligned to the left.

          - :value: center
            :member: Center
            :description: The text is aligned to the middle

          - :value: right
            :member: Right
            :description: The text is aligned to the right.

    - :name: valueAxis.axisCrossingValue
      :merge: true
      :type: object[]

    - :name: valueAxis.plotBands.from
      :merge: true
      :type: object

    - :name: valueAxis.plotBands.to
      :merge: true
      :type: object

    - :name: xAxis.axisCrossingValue
      :merge: true
      :type: object[]

    - :name: xAxis.min
      :merge: true
      :type: object

    - :name: xAxis.max
      :merge: true
      :type: object

    - :name: xAxis.plotBands.from
      :merge: true
      :type: object

    - :name: xAxis.plotBands.to
      :merge: true
      :type: object

    - :name: yAxis.axisCrossingValue
      :merge: true
      :type: object[]

    - :name: yAxis.min
      :merge: true
      :type: object

    - :name: yAxis.max
      :merge: true
      :type: object

    - :name: yAxis.plotBands.from
      :merge: true
      :type: object

    - :name: yAxis.plotBands.to
      :merge: true
      :type: object

    - :name: zoomable.selection.key
      :description: Specifies a keyboard key that should be pressed to activate the selection.
      :type: String
      :enum_type: ChartActivationKey

    - :name: zoomable.selection.lock
      :description: Specifies an axis that should not be zoomed.
      :type: String
      :enum_type: ChartAxisLock

    - :name: zoomable.mousewheel.lock
      :description: Specifies an axis that should not be zoomed.
      :type: String
      :enum_type: ChartAxisLock

    - :name: !ruby/regexp '/.*dashType$/i'
      :merge: true
      :enum_type: ChartDashType

    - :name: !ruby/regexp '/.*\.notes\.label\.position$/i'
      :merge: true
      :enum_type: ChartNoteLabelPosition

    - :name: !ruby/regexp '/.*\.notes\.position$/i'
      :merge: true
      :enum_type: ChartNotePosition
