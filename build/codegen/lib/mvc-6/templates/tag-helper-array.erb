using Microsoft.AspNetCore.Razor.TagHelpers;
using System.Collections.Generic;
using Kendo.Mvc.Rendering;
using System.Threading.Tasks;

namespace Kendo.Mvc.TagHelpers
{
    /// <summary>
    /// Kendo UI <%= csharp_class %> TagHelper
    /// </summary>
    [HtmlTargetElement("<%= taghelper_collection_element %>", ParentTag="<%= taghelper_collection_parent_element %>")]
    [RestrictChildren("<%= taghelper_element %>")]
    [SupressTagRendering]
    public partial class <%= array_reference.taghelper_collection_class_name %> : TagHelperCollectionBase<<%= array_reference.csharp_item_class_name + "TagHelper" %>>
    {
% _erbout << to_tag_helper_array_reference

        public <%= array_reference.taghelper_collection_class_name %>() : base(new List<<%= array_reference.csharp_item_class_name + "TagHelper" %>>())
        {

        }

        public override async Task ProcessAsync(TagHelperContext context, TagHelperOutput output)
        {
            context.Items[this.GetType()] = this;
            var child = await output.GetChildContentAsync();
            await base.ProcessAsync(context, output);
        }

        protected override void AddSelfToParent(TagHelperContext context)
        {
            var parent = typeof(<%= taghelper_collection_parent_class %>);
            if (context.Items.ContainsKey(parent))
            {
                (context.Items[parent] as <%= taghelper_collection_parent_class %>).Files = this;
            }
        }
    }
}