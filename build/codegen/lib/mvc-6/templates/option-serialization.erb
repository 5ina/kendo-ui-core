%if serialize?
% if string_and_function?
            if (<%= csharp_types_and_names["ClientHandlerDescriptor"] %>?.HasValue() == true)
            {
                settings["<%= name %>"] = <%= csharp_types_and_names["ClientHandlerDescriptor"] %>;
            }
% csharp_types_and_names.each do |type, propertyName|
% if !type.eql?("ClientHandlerDescriptor")
% if type.eql?("string")
            else if (<%= propertyName %>?.HasValue() == true)
            {
               settings["<%= name %>"] = <%= propertyName %>;
            }
% else #enum
            else if (<%= propertyName %>.HasValue)
            {
                settings["<%= name %>"] = <%= propertyName %>?.Serialize();
            }
% end
% end

% end
% else
%if template?
            if (<%=csharp_name%>Id.HasValue())
            {
                settings["<%= name %>"] = new ClientHandlerDescriptor {
                    HandlerName = string.Format(
                        "jQuery('{0}{1}').html()", <%=id_prefix%>, <%=csharp_name%>Id
                    )
                };
            }
            else if (<%=csharp_name%>.HasValue())
            {
                settings["<%= name %>"] = <%=csharp_name%>;
            }
%elsif csharp_type.eql?('string') || handler?
            if (<%=csharp_name%>?.HasValue() == true)
            {
                settings["<%= name %>"] = <%=csharp_name%>;
            }
%elsif csharp_array? || dictionary?
            if (<%=csharp_name%>?.Any() == true)
            {
                settings["<%= name %>"] = <%=csharp_name%>;
            }
%elsif csharp_type.eql?('object')
            if (<%=csharp_name%> != null)
            {
                settings["<%= name %>"] = <%=csharp_name%>;
            }
%elsif enum?
            if (<%=csharp_name%>.HasValue)
            {
                settings["<%= name %>"] = <%=csharp_name%>?.Serialize();
            }
%else
            if (<%= csharp_name %>.HasValue)
            {
                settings["<%= serialize_as.camelize %>"] = <%= csharp_name %>;
            }
%end

%end
% end
