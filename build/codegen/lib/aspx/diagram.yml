:options:
    - :name: connections.connection
      :type: kendo.dataviz.diagram.Connection

    - :name: shapes.shape
      :type: kendo.dataviz.diagram.Shape

    - :name: connectionDefaults.stroke
      :type: kendo.dataviz.diagram.Connection.Stroke
      :description: Defines the stroke configuration.

    - :name: connectionDefaults.hover
      :type: kendo.dataviz.diagram.Connection.Hover
      :description: Defines the hover configuration.

    - :name: connectionDefaults.hover.stroke
      :type: kendo.dataviz.diagram.Connection.Stroke
      :description: Defines the hover stroke configuration.

    - :name: connectionDefaults.startCap
      :description: The start cap (arrow, head or decoration) of the connection.
      :default: ConnectionStartCap.None
      :type: kendo.dataviz.diagram.Connection.StartCap
      :values:
          - none - no cap
          - ArrowStart - a filled arrow
          - FilledCircle - a filled circle

    - :name: connectionDefaults.endCap
      :type: kendo.dataviz.diagram.Connection.EndCap
      :description: The end cap (arrow, head or decoration) of the connection.
      :default: ConnectionEndCap.None
      :values:
          - none - no cap
          - ArrowEnd - a filled arrow
          - FilledCircle - a filled circle

    - :name: connections.points.point
      :type: kendo.dataviz.diagram.Connection.Point

    - :name: connections.stroke
      :type: kendo.dataviz.diagram.Connection.Stroke
      :description: Defines the stroke configuration.

    - :name: connections.hover
      :type: kendo.dataviz.diagram.Connection.Hover
      :description: Defines the hover configuration.

    - :name: connections.hover.stroke
      :type: kendo.dataviz.diagram.Connection.Stroke
      :description: Defines the hover stroke configuration.

    - :name: shapeDefaults.connectors.connector
      :type: kendo.dataviz.diagram.Shape.Connector

    - :name: shapeDefaults.editable
      :type: Boolean
      :description: Specifies editable properties for shapes

    - :name: shapeDefaults.editable_settings
      :type: kendo.dataviz.diagram.Shape.Editable
      :depends_on: shapeDefaults.editable
      :description: Specifies editable properties for shapes

    - :name: shapeDefaults.stroke
      :type: kendo.dataviz.diagram.Shape.Stroke
      :description: Defines the stroke configuration.

    - :name: shapeDefaults.stroke.dashType
      :type: kendo.dataviz.diagram.Stroke.dashType
      :description: The dash type of the shape
      :default: StrokeDashType.Solid
      :values:
        - dash - a line consisting of dashes
        - dashDot - a line consisting of a repeating pattern of dash-dot
        - dot - a line consisting of dots
        - longDash - a line consisting of a repeating pattern of long-dash
        - longDashDot - a line consisting of a repeating pattern of long-dash-dot
        - longDashDotDot - a line consisting of a repeating pattern of long-dash-dot-dot
        - solid - a solid line

    - :name: shapeDefaults.hover
      :type: kendo.dataviz.diagram.Shape.Hover
      :description: Defines the hover configuration.

    - :name: shapeDefaults.rotation
      :type: kendo.dataviz.diagram.Shape.Rotation
      :description: Defines the rotation of the shapes.

    - :name: shapes.connectors.connector
      :type: kendo.dataviz.diagram.Shape.Connector

    - :name: shapes.stroke
      :type: kendo.dataviz.diagram.Shape.Stroke
      :description: Defines the stroke configuration.

    - :name: shapes.stroke.dashType
      :type: kendo.dataviz.diagram.Stroke.dashType
      :description: The dash type of the shape
      :default: StrokeDashType.Solid
      :values:
        - dash - a line consisting of dashes
        - dashDot - a line consisting of a repeating pattern of dash-dot
        - dot - a line consisting of dots
        - longDash - a line consisting of a repeating pattern of long-dash
        - longDashDot - a line consisting of a repeating pattern of long-dash-dot
        - longDashDotDot - a line consisting of a repeating pattern of long-dash-dot-dot
        - solid - a solid line

    - :name: shapes.hover
      :type: kendo.dataviz.diagram.Shape.Hover
      :description: Defines the hover configuration.

    - :name: shapeDefaults.rotation
      :type: kendo.dataviz.diagram.Shape.Rotation
      :description: Defines the rotation of the shapes.

    - :name: layout.type
      :type: String
      :description: The type of the layout algorythm to use.
      :default: LayoutType.Tree
      :values:
          - tree - organizes a diagram in a hierarchical way and is typically used in organizational representations.
          - force - The force-directed layout algorithm (also known as the spring-embedder algorithm) is based on a physical simulation of forces acting on the nodes whereby the links define whether two nodes act upon each other. Each link effectively is like a spring embedded in the diagram. The simulation attempts to find a minimum energy state in such a way that the springs are in their base-state and thus do not pull or push any (linked) node.
          - layered - Layered graph layout is a type of graph layout in which the nodes of a (directed) graph are drawn in horizontal or vertical layers with the links directed in the complementary direction. It is also known as Sugiyama or hierarchical graph layout. When the graph is a tree the layout reduces to a standard tree layout and thus can be considered as an extension to the classic tree layout.

    - :name: layout.subtype
      :type: String
      :description: The subtype further defines the layout type by specifying in greater detail the behaviour expected by the layout algorithm.
      :default: LayoutSubtype.Down
      :values:
          - down - tree layout specific subtype. The tree is arranged with the root at the top and its children downwards.
          - up - tree layout specific subtype. The tree is arranged with the root at the bottom and its children upwards.
          - left - tree layout specific subtype. The tree is arranged with the root at the left and its children sideways to the right.
          - right - tree layout specific subtype. The tree is arranged with the root at the right and its children sideways to the left.
          - mindmapHorizontal - tree layout specific subtype. The root sits at the center and its children are spread equally to the left and right.
          - mindmapVertical - tree layout specific subtype. The root sits at the center and its children are spread equally above and below.
          - radial - tree layout specific subtype. The root sits at the center and its children are spread radially around.
          - tipOver - tree layout specific subtype. A special version of the tree-down layout where the grand-children (and iteratively) are arranged vertically while the direct children are arranged horizontally. This arrangement has the advantage that it doesn't spread as much as the classic tree-down layout. See below for a concrete example.
          - horizontal - layered layout specific subtype. The preferred direction of the links is horizontal.
          - vertical - layered layout specific subtype. The preferred direction of the links is vertical.

    - :name: shapes.content
      :type: kendo.dataviz.diagram.Shape.Content

    - :name: 
      :type: kendo.dataviz.diagram.Shape.Stroke
      :description: Defines the stroke configuration.

    - :name: pannable.key
      :type: kendo.dataviz.diagram.Modifier.Key
      :description: Defines the pannable modifier key.
      :default: ModifierKey.Ctrl
      :values:
          - none - No activation key
          - ctrl - The activation key will be "ctrl"
          - shift - The activation key will be "shift"
          - alt - The activation key will be "alt"

    - :name: selectable.key
      :type: kendo.dataviz.diagram.Modifier.Key
      :description: Defines the selectable modifier key.
      :default: ModifierKey.None
      :values:
          - none - No activation key
          - ctrl - The activation key will be "ctrl"
          - shift - The activation key will be "shift"
          - alt - The activation key will be "alt"

    - :name: layout.enabled
      :type: Boolean
      :default: false
      :description: Gets or Sets whether the Layout should be applied to the diagram.

    - :name: layout
      :type: kendo.dataviz.diagram.DiagramLayout
      :description: Defines the diagram's Layout settings
