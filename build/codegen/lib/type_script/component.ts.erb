% if (type_script_type =~ /^[a-z].*/ )
    module <%= type_script_type %> {
% methods.each do |method|
% method.type_script_declarations.each do |declaration|
        export function <%= declaration %>
% end
% end
    }
% else
    <%= type_script_kind %> <%= type_script_type %> <%= 'extends ' + type_script_base_class if type_script_base_class %> {
% if widget?
        static fn: <%= type_script_type %>;
        static extend(proto: Object): <%= type_script_type %>;

        element: JQuery;
        wrapper: JQuery;
        constructor(element: Element, options?: <%= type_script_options_type %>);
% elsif options.any?
        constructor(options?: <%= type_script_options_type %>);
% end
%if type_script_options_type
        options: <%= type_script_options_type %>;
%end
% if options.any? { |o| o.name == 'dataSource' }
% unless name =~ /Menu|ContextMenu|PanelBar/
        dataSource: kendo.data.DataSource;
% end
% end
% methods.each do |method|
% method.type_script_declarations.each do |declaration|
        <%= declaration %>
% end
% end
% fields.each do |field|
% if (field.name != 'dataSource' && field.name != "options")
        <%= field.type_script_declaration %>
% end
% end
    }
% composite_options.each do |option|
<%= option.type_script_interface %>
% end
% methods.each do |method|
% method.composite_parameters.each do |parameter|
<%= parameter.type_script_interface %>
% end
% end
% events.each do |event|
% event.composite_options.each do |option|
<%= option.type_script_interface %>
% end
% end

%if type_script_options_type
    interface <%= type_script_options_type %> {
        name?: string;
% unique_options.each do |option|
        <%= option.type_script_declaration %>
% end
% events.each do |event|
        <%= event.type_script_declaration %>
% end
    }
%end
%if type_script_event_type
    interface <%= type_script_event_type %> {
        sender: <%= type_script_type %>;
        isDefaultPrevented(): boolean;
        preventDefault: Function;
    }
%end

% events.each do |event|
% if event.options.size > 0
    interface <%= event.type_script_type %> extends <%= type_script_type %>Event {
% event.options.each do |option|
% if option.name != 'sender' && option.name != 'preventDefault'
        <%= option.type_script_declaration %>
% end
% end
    }

% end
% end
% end
